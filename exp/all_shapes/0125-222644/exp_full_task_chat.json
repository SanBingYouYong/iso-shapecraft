{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA prism with a star-shaped base of 8 points, a radius of 6 units, and a height of 10 units."}, {"role": "assistant", "content": "```python\nimport bpy\nimport math\nfrom mathutils import Vector\n\ndef create_star_prism(radius, height, points):\n    # Create the star base\n    star_points = []\n    for i in range(points * 2):\n        angle = math.pi * i / points\n        r = radius if i % 2 == 0 else radius / 2\n        x = r * math.cos(angle)\n        y = r * math.sin(angle)\n        star_points.append((x, y, 0))\n\n    # Create the mesh\n    mesh = bpy.data.meshes.new(\"StarPrism\")\n    obj = bpy.data.objects.new(\"StarPrism\", mesh)\n\n    bpy.context.collection.objects.link(obj)\n\n    # Create geometry\n    vertices = star_points + [(x, y, height) for x, y, z in star_points]\n    faces = []\n\n    # Create bottom face\n    bottom_face = [i for i in range(points * 2)]\n    faces.append(bottom_face)\n\n    # Create side faces\n    for i in range(points * 2):\n        next_index = (i + 1) % (points * 2)\n        faces.append([i, next_index, next_index + points * 2, i + points * 2])\n\n    # Create top face\n    top_face = [i + points * 2 for i in range(points * 2)]\n    faces.append(top_face)\n\n    # Create mesh from vertices and faces\n    mesh.from_pydata(vertices, [], faces)\n    mesh.update()\n\ncreate_star_prism(6, 10, 8)\n```"}]}