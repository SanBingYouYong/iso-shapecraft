{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA cube with an edge length of 10 units, featuring beveled edges with a bevel radius of 1 unit."}, {"role": "assistant", "content": "```python\nimport bpy\n\ndef create_beveled_cube(edge_length=10, bevel_radius=1):\n    # Delete the default cube\n    if \"Cube\" in bpy.data.objects:\n        bpy.data.objects[\"Cube\"].select_set(True)\n        bpy.ops.object.delete()\n    \n    # Create a new cube\n    bpy.ops.mesh.primitive_cube_add(size=edge_length)\n    cube = bpy.context.active_object\n    \n    # Apply bevel to the cube's edges\n    bpy.ops.object.modifier_add(type='BEVEL')\n    cube.modifiers[\"Bevel\"].width = bevel_radius\n    cube.modifiers[\"Bevel\"].segments = 10  # Adjust segments for smoothness\n    bpy.ops.object.modifier_apply(modifier=\"Bevel\")\n\ncreate_beveled_cube()\n```"}]}