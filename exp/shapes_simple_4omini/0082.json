{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA horizontal hourglass shape with equal widths at both ends."}, {"role": "assistant", "content": "```python\nimport bpy\nimport bmesh\nfrom math import radians\n\ndef create_hourglass():\n    # Create a new mesh and object\n    mesh = bpy.data.meshes.new(\"Hourglass\")\n    obj = bpy.data.objects.new(\"HourglassObject\", mesh)\n    \n    # Link object to the scene\n    bpy.context.collection.objects.link(obj)\n    \n    # Create a bmesh to work with\n    bm = bmesh.new()\n    \n    # Define the dimensions\n    width = 1.0\n    height = 2.0\n    depth = 1.0\n\n    # Create the top cone\n    top_verts = [bm.verts.new((width, 0, height)), bm.verts.new((-width, 0, height)), bm.verts.new((0, width, height)), bm.verts.new((0, -width, height))]\n    bmesh.ops.bevel(bm, geom=top_verts, offset=0.1)\n    \n    # Create the bottom cone\n    bottom_verts = [bm.verts.new((width, 0, 0)), bm.verts.new((-width, 0, 0)), bm.verts.new((0, width, 0)), bm.verts.new((0, -width, 0))]\n    bmesh.ops.bevel(bm, geom=bottom_verts, offset=0.1)\n    \n    # Connect the top and bottom\n    for i in range(len(top_verts)):\n        bm.faces.new((top_verts[i], top_verts[(i + 1) % len(top_verts)], bottom_verts[(i + 1) % len(bottom_verts)], bottom_verts[i]))\n\n    # Finish up\n    bm.to_mesh(mesh)\n    bm.free()\n\n# Call the function to create the hourglass shape\ncreate_hourglass()\n```"}]}