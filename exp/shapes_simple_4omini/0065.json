{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA diagonal cross shape with intersecting lines."}, {"role": "assistant", "content": "```python\nimport bpy\n\ndef create_diagonal_cross():\n    # Create the first line of the cross\n    bpy.ops.mesh.primitive_cylinder_add(radius=0.05, depth=2, location=(0, 0, 0))\n    line1 = bpy.context.active_object\n    line1.rotation_euler = (0, 0, 0.785398)  # Rotate 45 degrees\n\n    # Create the second line of the cross\n    bpy.ops.mesh.primitive_cylinder_add(radius=0.05, depth=2, location=(0, 0, 0))\n    line2 = bpy.context.active_object\n    line2.rotation_euler = (0, 0, -0.785398)  # Rotate -45 degrees\n\ncreate_diagonal_cross()\n```"}]}