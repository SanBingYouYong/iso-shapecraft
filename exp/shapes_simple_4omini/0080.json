{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA simple crescent-shaped moon with no fill."}, {"role": "assistant", "content": "```python\nimport bpy\nimport bmesh\nimport math\n\ndef create_crescent_moon(radius_outer, radius_inner, location):\n    # Create a new mesh and object\n    mesh = bpy.data.meshes.new(\"CrescentMoonMesh\")\n    obj = bpy.data.objects.new(\"CrescentMoon\", mesh)\n\n    # Link the object to the scene\n    bpy.context.collection.objects.link(obj)\n\n    # Create a bmesh object\n    bm = bmesh.new()\n\n    # Create the outer circle\n    outer_circle_verts = [bm.verts.new((radius_outer * math.cos(theta), radius_outer * math.sin(theta), 0)) for theta in [i * (math.pi / 16) for i in range(32)]]\n    \n    # Create the inner circle (to create the crescent shape)\n    inner_circle_verts = [bm.verts.new((radius_inner * math.cos(theta), radius_inner * math.sin(theta), 0)) for theta in [i * (math.pi / 16) for i in range(32)]]\n\n    # Connect the outer and inner vertices to form the crescent shape\n    for i in range(len(outer_circle_verts)):\n        v1 = outer_circle_verts[i]\n        v2 = outer_circle_verts[(i + 1) % len(outer_circle_verts)]\n        v3 = inner_circle_verts[(i + 1) % len(inner_circle_verts)]\n        v4 = inner_circle_verts[i]\n\n        # Create faces\n        bm.faces.new((v1, v2, v3, v4))\n\n    # Update the mesh and free the bmesh\n    bm.to_mesh(mesh)\n    bm.free()\n\n    # Set the location of the crescent moon\n    obj.location = location\n\n# Create a crescent moon with specified parameters\ncreate_crescent_moon(radius_outer=1, radius_inner=0.7, location=(0, 0, 0))\n```"}]}