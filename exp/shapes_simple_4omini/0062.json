{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA long, thin oval shape like a rugby ball."}, {"role": "assistant", "content": "```python\nimport bpy\n\ndef create_rugby_ball():\n    bpy.ops.mesh.primitive_uv_sphere_add(segments=32, ring_count=16, radius=1, location=(0, 0, 0))\n    rugby_ball = bpy.context.object\n    rugby_ball.scale[0] = 0.5  # Scale along the X-axis\n    rugby_ball.scale[1] = 1.0  # Scale along the Y-axis\n    rugby_ball.scale[2] = 0.5  # Scale along the Z-axis\n\ncreate_rugby_ball()\n```"}]}