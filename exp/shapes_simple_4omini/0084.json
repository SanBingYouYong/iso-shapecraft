{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA mountain-like shape with steep slopes."}, {"role": "assistant", "content": "```python\nimport bpy\nimport bmesh\nfrom mathutils import Vector\n\ndef create_mountain(size=2, height=3, subdivisions=5):\n    bpy.ops.mesh.primitive_plane_add(size=size, enter_editmode=True)\n    obj = bpy.context.object\n    bm = bmesh.from_edit_mesh(obj.data)\n\n    # Create a mountain-like shape\n    for v in bm.verts:\n        v.co.z = height * (1 - (v.co.x**2 + v.co.y**2) / (size**2))\n    \n    bmesh.update_edit_mesh(obj.data)\n    bpy.ops.object.mode_set(mode='OBJECT')\n\n    # Subdivide the mesh to create steep slopes\n    for _ in range(subdivisions):\n        bpy.ops.object.mode_set(mode='EDIT')\n        bpy.ops.mesh.subdivide(number_cuts=1)\n        bpy.ops.object.mode_set(mode='OBJECT')\n\n    # Optionally smooth the surface\n    bpy.ops.object.shade_smooth()\n\ncreate_mountain()\n```"}]}