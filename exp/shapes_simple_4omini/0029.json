{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA hemisphere with half of a sphere."}, {"role": "assistant", "content": "```python\nimport bpy\nimport bmesh\n\ndef create_hemisphere(radius, location):\n    bpy.ops.mesh.primitive_uv_sphere_add(radius=radius, location=location, segments=32, ring_count=16)\n    obj = bpy.context.active_object\n    bpy.ops.object.mode_set(mode='EDIT')\n    bm = bmesh.from_edit_mesh(obj.data)\n    \n    # Remove the bottom half of the sphere\n    for v in bm.verts[:]:\n        if v.co.z < 0:\n            bm.verts.remove(v)\n    \n    bmesh.update_edit_mesh(obj.data)\n    bpy.ops.object.mode_set(mode='OBJECT')\n\ncreate_hemisphere(radius=1, location=(0, 0, 0))\n```"}]}