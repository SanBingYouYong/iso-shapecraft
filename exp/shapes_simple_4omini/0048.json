{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA stylized leaf with a pointed tip."}, {"role": "assistant", "content": "```python\nimport bpy\nimport bmesh\nfrom math import radians\n\ndef create_stylized_leaf():\n    # Create a new mesh and object\n    mesh = bpy.data.meshes.new(\"StylizedLeaf\")\n    obj = bpy.data.objects.new(\"StylizedLeaf\", mesh)\n\n    # Link the object to the scene\n    bpy.context.collection.objects.link(obj)\n\n    # Create a bmesh to define the leaf shape\n    bm = bmesh.new()\n\n    # Define the vertices of the leaf\n    verts = [\n        bm.verts.new((0, 0, 0)),  # Base point\n        bm.verts.new((0.5, 0, 0)),  # Right tip\n        bm.verts.new((0.25, 0.5, 0)),  # Top tip\n        bm.verts.new((-0.25, 0.5, 0)),  # Left tip\n        bm.verts.new((-0.5, 0, 0)),  # Left base\n    ]\n\n    # Create faces to form the leaf shape\n    bm.faces.new((verts[0], verts[1], verts[2]))\n    bm.faces.new((verts[0], verts[2], verts[3]))\n    bm.faces.new((verts[0], verts[3], verts[4]))\n    \n    # Optionally add some thickness\n    for v in verts:\n        v.co.z += 0.1  # Raise z to give thickness\n\n    # Create the mesh from the bmesh\n    bm.to_mesh(mesh)\n    bm.free()\n\n    # Set the object's origin to geometry center\n    bpy.context.view_layer.objects.active = obj\n    bpy.ops.object.origin_set(type='ORIGIN_CENTER_OF_VOLUME', center='MEDIAN')\n\ncreate_stylized_leaf()\n```"}]}