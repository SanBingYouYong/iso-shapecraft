{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA rectangle with a semicircular top."}, {"role": "assistant", "content": "```python\nimport bpy\nimport math\n\ndef create_rectangle_with_semicircle(width, height, semicircle_radius):\n    # Create the rectangle\n    bpy.ops.mesh.primitive_plane_add(size=width, enter_editmode=False, align='WORLD', location=(0, 0, 0))\n    rectangle = bpy.context.object\n    rectangle.name = \"Rectangle\"\n    \n    # Scale the rectangle to the desired height\n    bpy.ops.object.mode_set(mode='EDIT')\n    bpy.ops.mesh.select_all(action='SELECT')\n    bpy.ops.transform.resize(value=(1, 1, height))\n    bpy.ops.object.mode_set(mode='OBJECT')\n    \n    # Create the semicircle\n    bpy.ops.mesh.primitive_circle_add(radius=semicircle_radius, fill_type='NOTHING', location=(0, 0, height))\n    semicircle = bpy.context.object\n    semicircle.name = \"Semicircle\"\n    \n    # Scale the semicircle to fit the rectangle width\n    semicircle.scale[0] = width / 2\n    \n    # Move the semicircle up to sit on top of the rectangle\n    semicircle.location.z += semicircle_radius\n\n    # Join the rectangle and semicircle\n    bpy.ops.object.select_all(action='DESELECT')\n    rectangle.select_set(True)\n    semicircle.select_set(True)\n    bpy.context.view_layer.objects.active = rectangle\n    bpy.ops.object.join()\n\ncreate_rectangle_with_semicircle(2, 1, 1)\n```"}]}