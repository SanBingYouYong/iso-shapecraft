{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA sector of a circle defined by two radii and an arc."}, {"role": "assistant", "content": "```python\nimport bpy\nimport math\n\ndef create_circle_sector(radius, angle, location=(0, 0, 0)):\n    # Clear the existing mesh objects\n    bpy.ops.object.select_all(action='DESELECT')\n    bpy.ops.object.select_by_type(type='MESH')\n    bpy.ops.object.delete()\n    \n    # Create a new mesh and object\n    mesh = bpy.data.meshes.new(\"CircleSector\")\n    obj = bpy.data.objects.new(\"CircleSector\", mesh)\n    \n    # Link the object to the scene\n    bpy.context.collection.objects.link(obj)\n    \n    # Generate vertices and faces for the sector\n    vertices = [(0, 0, 0)]  # Center point\n    num_segments = 32  # Number of segments for the arc\n    angle_step = angle / num_segments\n    \n    for i in range(num_segments + 1):\n        theta = math.radians(i * angle_step)\n        x = radius * math.cos(theta)\n        y = radius * math.sin(theta)\n        vertices.append((x, y, 0))\n    \n    # Create faces\n    faces = [(0, i + 1, i + 2) for i in range(num_segments)]\n    \n    # Create the mesh from the vertices and faces\n    mesh.from_pydata(vertices, [], faces)\n    mesh.update()\n    \n    # Move the object to the specified location\n    obj.location = location\n\ncreate_circle_sector(radius=2, angle=90, location=(0, 0, 0))\n```"}]}