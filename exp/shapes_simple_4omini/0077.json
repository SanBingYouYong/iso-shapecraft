{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA rectangle with a circular hole in the center."}, {"role": "assistant", "content": "```python\nimport bpy\n\ndef create_rectangle_with_circular_hole(length, width, hole_diameter):\n    # Create a rectangle\n    bpy.ops.mesh.primitive_plane_add(size=1, enter_editmode=True)\n    bpy.ops.transform.resize(value=(length / 2, width / 2, 1))\n    \n    # Go to edit mode to create the hole\n    bpy.ops.object.mode_set(mode='EDIT')\n    bpy.ops.mesh.primitive_circle_add(radius=hole_diameter / 2, location=(0, 0, 0))\n    bpy.ops.mesh.intersect_boolean(operation='DIFFERENCE')\n    \n    # Switch back to object mode\n    bpy.ops.object.mode_set(mode='OBJECT')\n    \n    # Clean up: remove the original circle object\n    bpy.ops.object.select_all(action='DESELECT')\n    bpy.context.view_layer.objects.active = bpy.context.selected_objects[0]\n    bpy.data.objects['Circle'].select_set(True)\n    bpy.ops.object.delete()\n\n# Parameters: length, width, hole diameter\ncreate_rectangle_with_circular_hole(4, 2, 1)\n```"}]}