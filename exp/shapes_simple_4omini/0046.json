{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA square with a smaller square cut out from one corner."}, {"role": "assistant", "content": "```python\nimport bpy\n\ndef create_cutout_square():\n    # Remove all existing objects\n    bpy.ops.object.select_all(action='DESELECT')\n    bpy.ops.object.select_by_type(type='MESH')\n    bpy.ops.object.delete()\n\n    # Create the outer square\n    bpy.ops.mesh.primitive_plane_add(size=2, enter_editmode=True)\n    outer_square = bpy.context.object\n    bpy.ops.mesh.select_all(action='SELECT')\n    \n    # Create the inner square (cutout)\n    bpy.ops.mesh.primitive_plane_add(size=1, enter_editmode=True)\n    inner_square = bpy.context.object\n    inner_square.location = (1, -1, 0)  # Move cutout to corner\n    bpy.ops.mesh.select_all(action='DESELECT')\n    \n    # Go back to the outer square and perform the cut\n    bpy.context.view_layer.objects.active = outer_square\n    bpy.ops.object.mode_set(mode='EDIT')\n    bpy.ops.mesh.select_all(action='DESELECT')\n    outer_square.data.polygons[0].select = True\n    bpy.ops.mesh.select_all(action='SELECT')\n    \n    # Boolean modifier for cutout\n    modifier = outer_square.modifiers.new(name=\"Boolean\", type='BOOLEAN')\n    modifier.operation = 'DIFFERENCE'\n    modifier.use_self = True\n    modifier.object = inner_square\n    bpy.ops.object.modifier_apply(modifier=modifier.name)\n    \n    # Switch back to object mode\n    bpy.ops.object.mode_set(mode='OBJECT')\n    \n    # Delete the inner square\n    bpy.data.objects.remove(inner_square)\n\ncreate_cutout_square()\n```"}]}