{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA rounded rectangular box shape."}, {"role": "assistant", "content": "```python\nimport bpy\n\ndef create_rounded_rectangle_box(width, height, depth, radius):\n    bpy.ops.mesh.primitive_cube_add(size=1, location=(0, 0, 0))\n    obj = bpy.context.object\n    bpy.ops.object.mode_set(mode='EDIT')\n    \n    # Select all vertices\n    bpy.ops.mesh.select_all(action='SELECT')\n    \n    # Scale to desired dimensions\n    bpy.ops.transform.resize(value=(width / 2, depth / 2, height / 2))\n    \n    # Add a subdivision surface modifier for smoothness\n    bpy.ops.object.modifier_add(type='SUBSURF')\n    obj.modifiers['Subdivision'].levels = 2\n    bpy.ops.object.shade_smooth()\n    \n    # Apply the modifier to keep the geometry\n    bpy.ops.object.modifier_apply(modifier='Subdivision')\n    \n    # Add the bevel modifier to round the edges\n    bpy.ops.object.modifier_add(type='BEVEL')\n    obj.modifiers['Bevel'].width = radius\n    obj.modifiers['Bevel'].segments = 10\n    bpy.ops.object.modifier_apply(modifier='Bevel')\n    \n    bpy.ops.object.mode_set(mode='OBJECT')\n\n# Parameters: width, height, depth, radius\ncreate_rounded_rectangle_box(2, 1, 1, 0.2)\n```"}]}