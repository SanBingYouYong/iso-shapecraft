{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nA frustum with a truncated cone shape."}, {"role": "assistant", "content": "```python\nimport bpy\nimport math\n\ndef create_frustum(base_radius_top, base_radius_bottom, height, location):\n    bpy.ops.mesh.primitive_cone_add(\n        vertices=32,\n        radius1=base_radius_bottom,\n        radius2=base_radius_top,\n        depth=height,\n        location=location\n    )\n    # Move the cone down half its height to center it at the origin\n    bpy.ops.transform.translate(value=(0, 0, -height / 2))\n\n# Parameters: top radius, bottom radius, height, location\ncreate_frustum(base_radius_top=1, base_radius_bottom=2, height=3, location=(0, 0, 0))\n```"}]}