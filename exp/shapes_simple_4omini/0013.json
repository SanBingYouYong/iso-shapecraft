{"messages": [{"role": "user", "content": "# Shape Program Generation Instruction\n\n**Objective:** Given the user prompt describing a 3D shape, enerate a code snippet in the target programming language to produce the shape described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\nUse the following code structure:\n```python\nimport bpy\n\ndef your_function(<any parameters>):\n    <your code>\n\nyour_function(<parameters>)\n\n```\n\n# Shape Description\ncoding language: Python\nshape engine: Blender\nAn oval shape elongated like an ellipse."}, {"role": "assistant", "content": "```python\nimport bpy\nimport bmesh\n\ndef create_ellipse(a, b, z, segments=32):\n    bpy.ops.object.select_all(action='DESELECT')\n    bpy.ops.mesh.primitive_uv_sphere_add(segments=segments, ring_count=1, radius=1, location=(0, 0, z))\n    obj = bpy.context.object\n    bpy.ops.object.mode_set(mode='EDIT')\n    bm = bmesh.from_edit_mesh(obj.data)\n\n    for v in bm.verts:\n        v.co.x *= a  # Scale x for ellipse\n        v.co.y *= b  # Scale y for ellipse\n\n    bmesh.update_edit_mesh(obj.data)\n    bpy.ops.object.mode_set(mode='OBJECT')\n\ncreate_ellipse(2, 1, 0)  # Parameters: a=2, b=1, z=0\n```"}]}