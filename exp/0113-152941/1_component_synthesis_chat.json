{"messages": [{"role": "user", "content": "# Component Synthesis Instruction\n\n**Objective:** Generate a code snippet in the target programming language to produce the 3D shape component described. The generated code should:\n1. Align with the component description.\n2. Be syntactically correct, functional, can be executed stand-alone or be called as a method. \n3. Produce a 3D representation consistent with the intended design.\n\n**Output Format:** \n[code snippet (provide code only)]\n\n# Component Description\ncoding language: Python\nshape engine: Blender\n\nname: Backrest\ndescription: A tall, rectangular panel that is slightly inclined backward for ergonomic support. The height of the backrest should be greater than that of the chair seat. The edges of the backrest should be smoothly rounded to create a cohesive design with the seat.\n"}, {"role": "assistant", "content": "```python\nimport bpy\n\ndef create_backrest():\n    # Delete default cube\n    bpy.ops.object.select_all(action='DESELECT')\n    bpy.ops.object.select_by_type(type='MESH')\n    bpy.ops.object.delete()\n\n    # Create a rectangle for the backrest\n    bpy.ops.mesh.primitive_plane_add(size=2, enter_editmode=False, align='WORLD', location=(0, 0, 1.5))\n    backrest = bpy.context.active_object\n    backrest.name = \"Backrest\"\n\n    # Scale to create a tall rectangular shape\n    bpy.ops.object.mode_set(mode='EDIT')\n    bpy.ops.mesh.select_all(action='SELECT')\n    bpy.ops.transform.resize(value=(1, 0.1, 1.5))  # width, depth, height\n    bpy.ops.object.mode_set(mode='OBJECT')\n\n    # Add a subdivision surface for smooth edges\n    bpy.ops.object.modifier_add(type='SUBSURF')\n    backrest.modifiers[\"Subdivision\"].levels = 2\n    bpy.ops.object.shade_smooth()\n\n    # Add a bevel modifier for rounded edges\n    bpy.ops.object.modifier_add(type='BEVEL')\n    backrest.modifiers[\"Bevel\"].width = 0.05\n    backrest.modifiers[\"Bevel\"].segments = 5\n\n    # Apply all modifiers\n    bpy.ops.object.modifier_apply(modifier=\"Subdivision\")\n    bpy.ops.object.modifier_apply(modifier=\"Bevel\")\n\n    # Rotate the backrest slightly backward for ergonomic support\n    backrest.rotation_euler = (0.1, 0, 0)  # slight backward inclination\n\ncreate_backrest()\n```"}]}