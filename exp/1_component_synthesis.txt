```python
import bpy

def create_backrest_base(width, height, depth, rounding_radius):
    # Create a new mesh and object
    bpy.ops.mesh.primitive_cube_add(size=1)
    backrest = bpy.context.object
    backrest.name = "Backrest_Base"
    
    # Scale the cube to the desired dimensions
    backrest.scale[0] = width / 2
    backrest.scale[1] = depth / 2
    backrest.scale[2] = height / 2

    # Apply a smooth shading
    bpy.ops.object.shade_smooth()

    # Add a subdivision surface modifier for rounding the edges
    bpy.ops.object.modifier_add(type='SUBSURF')
    backrest.modifiers["Subdivision"].levels = 2
    backrest.modifiers["Subdivision"].render_levels = 2

    # Apply the modifier to make the mesh editable
    bpy.ops.object.modifier_apply(modifier="Subdivision")

    # Create rounded edges using Bevel
    bpy.ops.object.modifier_add(type='BEVEL')
    backrest.modifiers["Bevel"].width = rounding_radius
    backrest.modifiers["Bevel"].segments = 10

    # Apply the bevel modifier
    bpy.ops.object.modifier_apply(modifier="Bevel")

# Example usage: create a backrest base with specific dimensions
create_backrest_base(width=0.5, height=0.6, depth=0.1, rounding_radius=0.05)
```